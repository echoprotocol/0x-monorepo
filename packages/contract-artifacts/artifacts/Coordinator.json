{
    "schemaVersion": "2.0.0",
    "contractName": "Coordinator",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "address", "name": "signerAddress", "type": "address"},
                            {"internalType": "bytes", "name": "data", "type": "bytes"}
                        ],
                        "internalType": "struct LibZeroExTransaction.ZeroExTransaction",
                        "name": "transaction",
                        "type": "tuple"
                    }
                ],
                "name": "getTransactionHash",
                "outputs": [{"internalType": "bytes32", "name": "transactionHash", "type": "bytes32"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {"internalType": "address", "name": "account", "type": "address"},
                    {"internalType": "bytes32", "name": "hash", "type": "bytes32"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "isMessageSigner",
                "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "txOrigin", "type": "address"},
                            {"internalType": "bytes32", "name": "transactionHash", "type": "bytes32"},
                            {"internalType": "bytes", "name": "transactionSignature", "type": "bytes"},
                            {"internalType": "uint256", "name": "approvalExpirationTimeSeconds", "type": "uint256"}
                        ],
                        "internalType": "struct LibCoordinatorApproval.CoordinatorApproval",
                        "name": "approval",
                        "type": "tuple"
                    }
                ],
                "name": "getCoordinatorApprovalHash",
                "outputs": [{"internalType": "bytes32", "name": "approvalHash", "type": "bytes32"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "address", "name": "signerAddress", "type": "address"},
                            {"internalType": "bytes", "name": "data", "type": "bytes"}
                        ],
                        "internalType": "struct LibZeroExTransaction.ZeroExTransaction",
                        "name": "transaction",
                        "type": "tuple"
                    },
                    {"internalType": "address", "name": "txOrigin", "type": "address"},
                    {"internalType": "bytes", "name": "transactionSignature", "type": "bytes"},
                    {"internalType": "uint256[]", "name": "approvalExpirationTimeSeconds", "type": "uint256[]"},
                    {"internalType": "bytes[]", "name": "approvalSignatures", "type": "bytes[]"}
                ],
                "name": "executeTransaction",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "EIP712_EXCHANGE_DOMAIN_HASH",
                "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "address", "name": "signerAddress", "type": "address"},
                            {"internalType": "bytes", "name": "data", "type": "bytes"}
                        ],
                        "internalType": "struct LibZeroExTransaction.ZeroExTransaction",
                        "name": "transaction",
                        "type": "tuple"
                    },
                    {"internalType": "address", "name": "txOrigin", "type": "address"},
                    {"internalType": "bytes", "name": "transactionSignature", "type": "bytes"},
                    {"internalType": "uint256[]", "name": "approvalExpirationTimeSeconds", "type": "uint256[]"},
                    {"internalType": "bytes[]", "name": "approvalSignatures", "type": "bytes[]"}
                ],
                "name": "assertValidCoordinatorApprovals",
                "outputs": [],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{"internalType": "bytes", "name": "data", "type": "bytes"}],
                "name": "decodeOrdersFromFillData",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "EIP712_COORDINATOR_DOMAIN_HASH",
                "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [{"internalType": "address", "name": "_exchange", "type": "address"}],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            }
        ],
        "devdoc": {
            "methods": {
                "assertValidCoordinatorApprovals((uint256,address,bytes),address,bytes,uint256[],bytes[])": {
                    "details": "Validates that the 0x transaction has been approved by all of the feeRecipients      that correspond to each order in the transaction's Exchange calldata.",
                    "params": {
                        "approvalExpirationTimeSeconds": "Array of expiration times in seconds for which each corresponding approval signature expires.",
                        "approvalSignatures": "Array of signatures that correspond to the feeRecipients of each order in the transaction's Exchange calldata.",
                        "transaction": "0x transaction containing salt, signerAddress, and data.",
                        "transactionSignature": "Proof that the transaction has been signed by the signer.",
                        "txOrigin": "Required signer of Ethereum transaction calling this function."
                    }
                },
                "decodeOrdersFromFillData(bytes)": {
                    "details": "Decodes the orders from Exchange calldata representing any fill method.",
                    "params": {"data": "Exchange calldata representing a fill method."},
                    "return": "The orders from the Exchange calldata."
                },
                "executeTransaction((uint256,address,bytes),address,bytes,uint256[],bytes[])": {
                    "details": "Executes a 0x transaction that has been signed by the feeRecipients that correspond to each order in the transaction's Exchange calldata.",
                    "params": {
                        "approvalExpirationTimeSeconds": "Array of expiration times in seconds for which each corresponding approval signature expires.",
                        "approvalSignatures": "Array of signatures that correspond to the feeRecipients of each order in the transaction's Exchange calldata.",
                        "transaction": "0x transaction containing salt, signerAddress, and data.",
                        "transactionSignature": "Proof that the transaction has been signed by the signer.",
                        "txOrigin": "Required signer of Ethereum transaction calling this function."
                    }
                },
                "getCoordinatorApprovalHash((address,bytes32,bytes,uint256))": {
                    "details": "Calculated the EIP712 hash of the Coordinator approval mesasage using the domain separator of this contract.",
                    "params": {
                        "approval": "Coordinator approval message containing the transaction hash, transaction signature, and expiration of the approval."
                    },
                    "return": "EIP712 hash of the Coordinator approval message with the domain separator of this contract."
                },
                "getTransactionHash((uint256,address,bytes))": {
                    "details": "Calculates the EIP712 hash of a 0x transaction using the domain separator of the Exchange contract.",
                    "params": {"transaction": "0x transaction containing salt, signerAddress, and data."},
                    "return": "EIP712 hash of the transaction with the domain separator of this contract."
                },
                "isMessageSigner(address,bytes32,bytes)": {
                    "details": "Recovers the address of a signer given a hash and signature and compare it with provided one.",
                    "params": {
                        "hash": "Any 32 byte hash.",
                        "signature": "Proof that the hash has been signed by signer."
                    }
                }
            }
        },
        "evm": {
            "bytecode": {
                "object": "0x60806040523480156200001157600080fd5b506040516200208038038062002080833981016040819052620000349162000253565b600080546001600160a01b0319166001600160a01b0383161790556040516200006090602001620002a0565b60408051601f1981840301815282825280516020918201208383018352601784527f30782050726f746f636f6c20436f6f7264696e61746f720000000000000000009382019390935281518083018352600581527f312e302e300000000000000000000000000000000000000000000000000000009082015290516200012e92917f626d101e477fd17dd52afb3f9ad9eb016bf60f6e377877f34e8f3ea84c930236917f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c9130910162000285565b60408051601f19818403018152908290528051602091820120600155620001569101620002a0565b60408051601f1981840301815282825280516020918201208383018352600b84527f30782050726f746f636f6c0000000000000000000000000000000000000000009382019390935281518083018352600181527f32000000000000000000000000000000000000000000000000000000000000009082015260005491516200023193927ff0f24618f4c4be1e62e026fb039a20ef96f4495294817d1027ffaa6d1f70e61e927fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5926001600160a01b03909216910162000285565b60408051601f1981840301815291905280516020909101206002555062000361565b6000602082840312156200026657600080fd5b81516001600160a01b03811681146200027e57600080fd5b9392505050565b93845260208401929092526040830152606082015260800190565b7f454950373132446f6d61696e280000000000000000000000000000000000000081527f737472696e67206e616d652c0000000000000000000000000000000000000000600d8201527f737472696e672076657273696f6e2c000000000000000000000000000000000060198201527f6164647265737320766572696679696e67436f6e74726163740000000000000060288201527f2900000000000000000000000000000000000000000000000000000000000000604182015260420190565b611d0f80620003716000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c26cfecd1161005b578063c26cfecd146100fe578063d2df073314610106578063ee55b96814610119578063fb6961cc1461013957610088565b806323872f551461008d578063259cdc8b146100b657806348a321d6146100d657806390c3bc3f146100e9575b600080fd5b6100a061009b36600461157a565b610141565b6040516100ad9190611725565b60405180910390f35b6100c96100c436600461132d565b61015a565b6040516100ad91906118af565b6100a06100e436600461144f565b610376565b6100fc6100f73660046115af565b610389565b005b6100a0610435565b6100fc6101143660046115af565b61043b565b61012c610127366004611412565b61046a565b6040516100ad919061177b565b6100a061091e565b600061015461014f83610924565b610992565b92915050565b60008082511161019f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611a98565b60405180910390fd5b60006101aa836109a0565b60f81c9050600481106101e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611996565b60008160ff1660048111156101fa57fe5b9050600081600481111561020a57fe5b1415610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611a61565b600181600481111561025057fe5b14156102c15783511561028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611b63565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611acf565b60028160048111156102cf57fe5b14156102e9576102e0868686610a3e565b9250505061036f565b60038160048111156102f757fe5b141561033d57600085604051602001610310919061174a565b604051602081830303815290604052805190602001209050610333878287610a3e565b935050505061036f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611996565b9392505050565b600061015461038483610aab565b610b0a565b610396858585858561043b565b6000548551602087015160408089015190517fbfc8bfce00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9094169363bfc8bfce936103fc93909290918990600401611b9a565b600060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b505050505050505050565b60025481565b606061044a866040015161046a565b80519091501561046257610462868287878787610b18565b505050505050565b6060600061047e838263ffffffff610d8916565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167fb4be83d500000000000000000000000000000000000000000000000000000000148061051157507fffffffff0000000000000000000000000000000000000000000000000000000081167f3e228bae00000000000000000000000000000000000000000000000000000000145b8061055d57507fffffffff0000000000000000000000000000000000000000000000000000000081167f64a3bc1500000000000000000000000000000000000000000000000000000000145b156105e65761056a610fbd565b835161058090859060049063ffffffff610df416565b80602001905161059391908101906114e1565b604080516001808252818301909252919250816020015b6105b2610fbd565b8152602001906001900390816105aa57905050925080836000815181106105d557fe5b602002602001018190525050610918565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f297bb70b00000000000000000000000000000000000000000000000000000000148061067757507fffffffff0000000000000000000000000000000000000000000000000000000081167f50dde19000000000000000000000000000000000000000000000000000000000145b806106c357507fffffffff0000000000000000000000000000000000000000000000000000000081167f4d0ae54600000000000000000000000000000000000000000000000000000000145b8061070f57507fffffffff0000000000000000000000000000000000000000000000000000000081167fe5fa431b00000000000000000000000000000000000000000000000000000000145b8061075b57507fffffffff0000000000000000000000000000000000000000000000000000000081167fa3e2038000000000000000000000000000000000000000000000000000000000145b806107a757507fffffffff0000000000000000000000000000000000000000000000000000000081167f7e1d980800000000000000000000000000000000000000000000000000000000145b806107f357507fffffffff0000000000000000000000000000000000000000000000000000000081167fdd1c7d1800000000000000000000000000000000000000000000000000000000145b1561082857825161080e90849060049063ffffffff610df416565b8060200190516108219190810190611386565b9150610918565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f3c28d8610000000000000000000000000000000000000000000000000000000014156109185761087a610fbd565b610882610fbd565b845161089890869060049063ffffffff610df416565b8060200190516108ab9190810190611516565b60408051600280825260608201909252929450909250816020015b6108ce610fbd565b8152602001906001900390816108c657905050935081846000815181106108f157fe5b6020026020010181905250808460018151811061090a57fe5b602002602001018190525050505b50919050565b60015481565b604081810151825160209384015182519285019290922083517f213c6f636f3ea94e701c0adf9b2624aa45a6c694f9a292c094f9a81c24b5df4c81529485019190915273ffffffffffffffffffffffffffffffffffffffff9091169183019190915260608201526080902090565b600061015460025483610eb9565b6000808251116109dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611a04565b816001835103815181106109ec57fe5b016020015182517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909252507fff000000000000000000000000000000000000000000000000000000000000001690565b60008383604051602001610a529190611725565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a8a9161172e565b604051810390610a9b90859061172e565b604051809103902c949350505050565b604080820151825160208085015160608681015185519584019590952086517f2fbcdbaa76bc7589916958ae919dfbef04d23f6bbf26de6ff317b32c6cc01e058152938401949094529482015292830152608082015260a09020919050565b600061015460015483610eb9565b3273ffffffffffffffffffffffffffffffffffffffff851614610b67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610196906119cd565b6000610b7287610141565b865183519192509060005b828114610d7d57600073ffffffffffffffffffffffffffffffffffffffff16898281518110610ba857fe5b60200260200101516060015173ffffffffffffffffffffffffffffffffffffffff161415610bd557610d75565b6000898281518110610be357fe5b60200260200101516040015190508073ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161415610c2b5750610d75565b6000805b84811015610d3a576000898281518110610c4557fe5b60200260200101519050610c57611076565b60405180608001604052808e73ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018d8152602001838152509050428211610cc9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101969061195f565b6000610cd482610376565b905060608b8581518110610ce457fe5b6020026020010151604051602001610cfc919061172e565b6040516020818303038152906040529050610d1887838361015a565b15610d2a576001955050505050610d3a565b505060019092019150610c2f9050565b5080610d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610196906118ba565b50505b600101610b7d565b50505050505050505050565b60008160040183511015610dc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611b06565b5001602001517fffffffff000000000000000000000000000000000000000000000000000000001690565b606081831115610e30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610196906118f1565b8351821115610e6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690611928565b8282036040519080825280601f01601f191660200182016040528015610e98576020820181803883390190505b50905061036f610ea782610ef3565b84610eb187610ef3565b018351610ef9565b6040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60200190565b6020811015610f23576001816020036101000a038019835116818551168082178652505050610fb8565b82821415610f3057610fb8565b82821115610f6a5760208103905080820181840181515b82851015610f62578451865260209586019590940193610f47565b905250610fb8565b60208103905080820181840183515b81861215610fb357825182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09283019290910190610f79565b855250505b505050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000801916815260200160608152602001600081525090565b805161015481611ca7565b600082601f8301126110d2578081fd5b81356110e56110e082611c13565b611bec565b8181529150602080830190840160005b838110156111225761110d876020843589010161112c565b835260209283019291909101906001016110f5565b5050505092915050565b600082601f83011261113c578081fd5b813561114a6110e082611c34565b915080825283602082850101111561116157600080fd5b8060208401602084013760009082016020015292915050565b600082601f83011261118b57600080fd5b81516111996110e082611c34565b91508082528360208285010111156111b057600080fd5b6111c1816020840160208601611c77565b5092915050565b60006101808083850312156111db578182fd5b6111e481611bec565b9150506111f183836110b7565b815261120083602084016110b7565b602082015261121283604084016110b7565b604082015261122483606084016110b7565b60608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015167ffffffffffffffff8082111561128657600080fd5b6112928683870161117a565b838501526101609250828501519150808211156112ae57600080fd5b506112bb8582860161117a565b82840152505092915050565b6000606082840312156112d8578081fd5b6112e26060611bec565b90508135815260208201356112f681611ca7565b6020820152604082013567ffffffffffffffff81111561131557600080fd5b6113218482850161112c565b60408301525092915050565b60008060006060848603121561134257600080fd5b833561134d81611ca7565b925060208401359150604084013567ffffffffffffffff81111561137057600080fd5b61137c8682870161112c565b9150509250925092565b60006020808385031215611398578182fd5b825167ffffffffffffffff8111156113ae578283fd5b80840185601f8201126113bf578384fd5b805191506113cf6110e083611c13565b82815283810190828501865b85811015611404576113f28a8884518801016111c8565b845292860192908601906001016113db565b509098975050505050505050565b60006020828403121561142457600080fd5b813567ffffffffffffffff81111561143b57600080fd5b6114478482850161112c565b949350505050565b600060208284031215611460578081fd5b813567ffffffffffffffff80821115611477578283fd5b81840160808187031215611489578384fd5b6114936080611bec565b925080356114a081611ca7565b8352602081810135908401526040810135828111156114bd578485fd5b6114c98782840161112c565b60408501525060609081013590830152509392505050565b6000602082840312156114f357600080fd5b815167ffffffffffffffff81111561150a57600080fd5b611447848285016111c8565b6000806040838503121561152957600080fd5b825167ffffffffffffffff8082111561154157600080fd5b61154d868387016111c8565b9350602085015191508082111561156357600080fd5b50611570858286016111c8565b9150509250929050565b60006020828403121561158c57600080fd5b813567ffffffffffffffff8111156115a357600080fd5b611447848285016112c7565b600080600080600060a086880312156115c6578283fd5b853567ffffffffffffffff808211156115dd578485fd5b6115e989838a016112c7565b965060209150818801356115fc81611ca7565b955060408801358181111561160f578586fd5b61161b8a828b0161112c565b95505060608801358181111561162f578384fd5b8089018a601f820112611640578485fd5b803591506116506110e083611c13565b82815284810190828601868502840187018e101561166c578788fd5b8793505b8484101561168e578035835260019390930192918601918601611670565b50965050505060808801359150808211156116a7578283fd5b506116b4888289016110c2565b9150509295509295909350565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526116f3816020860160208601611c77565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b90815260200190565b60008251611740818460208701611c77565b9190910192915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b600060208083018184528085518083526040860191506040848202870101925083870160005b828110156118a2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845281516101806117e08783516116c1565b878201516117f0898901826116c1565b50604082015161180360408901826116c1565b50606082015161181660608901826116c1565b506080820151608088015260a082015160a088015260c082015160c088015260e082015160e08801526101008083015181890152506101208083015181890152506101408083015182828a015261186f838a01826116db565b915050610160915081830151888203838a015261188c82826116db565b98505050948701945050908501906001016117a1565b5092979650505050505050565b901515815260200190565b6020808252601a908201527f494e56414c49445f415050524f56414c5f5349474e4154555245000000000000604082015260600190565b6020808252601a908201527f46524f4d5f4c4553535f5448414e5f544f5f5245515549524544000000000000604082015260600190565b6020808252601c908201527f544f5f4c4553535f5448414e5f4c454e4754485f524551554952454400000000604082015260600190565b60208082526010908201527f415050524f56414c5f4558504952454400000000000000000000000000000000604082015260600190565b60208082526015908201527f5349474e41545552455f554e535550504f525445440000000000000000000000604082015260600190565b6020808252600e908201527f494e56414c49445f4f524947494e000000000000000000000000000000000000604082015260600190565b60208082526021908201527f475245415445525f5448414e5f5a45524f5f4c454e4754485f5245515549524560408201527f4400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f5349474e41545552455f494c4c4547414c000000000000000000000000000000604082015260600190565b6020808252601e908201527f4c454e4754485f475245415445525f5448414e5f305f52455155495245440000604082015260600190565b60208082526011908201527f5349474e41545552455f494e56414c4944000000000000000000000000000000604082015260600190565b60208082526025908201527f475245415445525f4f525f455155414c5f544f5f345f4c454e4754485f52455160408201527f5549524544000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f4c454e4754485f305f5245515549524544000000000000000000000000000000604082015260600190565b600085825273ffffffffffffffffffffffffffffffffffffffff8516602083015260806040830152611bcf60808301856116db565b8281036060840152611be181856116db565b979650505050505050565b60405181810167ffffffffffffffff81118282101715611c0b57600080fd5b604052919050565b600067ffffffffffffffff821115611c2a57600080fd5b5060209081020190565b600067ffffffffffffffff821115611c4b57600080fd5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015611c92578181015183820152602001611c7a565b83811115611ca1576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611cc957600080fd5b5056fea365627a7a7231582024f0279952f92a9079071ab6428588ee730c43bd3c9a9262258580b16f3917e96c6578706572696d656e74616cf564736f6c634300050b0040"
            }
        }
    },
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.11.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {"yul": true, "deduplicate": true, "cse": true, "constantOptimizer": true}
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "constantinople",
            "remappings": [
                "@0x/contracts-utils=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/coordinator/node_modules/@0x/contracts-utils",
                "@0x/contracts-exchange-libs=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/coordinator/node_modules/@0x/contracts-exchange-libs"
            ]
        }
    },
    "networks": {}
}
