{
    "schemaVersion": "2.0.0",
    "contractName": "Exchange",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}],
                "name": "filled",
                "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "batchFillOrders",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}],
                "name": "cancelled",
                "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {"internalType": "bytes32", "name": "hash", "type": "bytes32"},
                    {"internalType": "address", "name": "signerAddress", "type": "address"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "preSign",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "leftOrder",
                        "type": "tuple"
                    },
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "rightOrder",
                        "type": "tuple"
                    },
                    {"internalType": "bytes", "name": "leftSignature", "type": "bytes"},
                    {"internalType": "bytes", "name": "rightSignature", "type": "bytes"}
                ],
                "name": "matchOrders",
                "outputs": [
                    {
                        "components": [
                            {
                                "components": [
                                    {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                                    {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                                    {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                                    {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                                ],
                                "internalType": "struct LibFillResults.FillResults",
                                "name": "left",
                                "type": "tuple"
                            },
                            {
                                "components": [
                                    {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                                    {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                                    {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                                    {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                                ],
                                "internalType": "struct LibFillResults.FillResults",
                                "name": "right",
                                "type": "tuple"
                            },
                            {"internalType": "uint256", "name": "leftMakerAssetSpreadAmount", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.MatchedFillResults",
                        "name": "matchedFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    {"internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "fillOrderNoThrow",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "fillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{"internalType": "bytes4", "name": "", "type": "bytes4"}],
                "name": "assetProxies",
                "outputs": [{"internalType": "address", "name": "", "type": "address"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    }
                ],
                "name": "batchCancelOrders",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "batchFillOrKillOrders",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [{"internalType": "uint256", "name": "targetOrderEpoch", "type": "uint256"}],
                "name": "cancelOrdersUpTo",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "batchFillOrdersNoThrow",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{"internalType": "bytes4", "name": "assetProxyId", "type": "bytes4"}],
                "name": "getAssetProxy",
                "outputs": [{"internalType": "address", "name": "", "type": "address"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}],
                "name": "transactions",
                "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    {"internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "fillOrKillOrder",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "fillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {"internalType": "address", "name": "validatorAddress", "type": "address"},
                    {"internalType": "bool", "name": "approval", "type": "bool"}
                ],
                "name": "setSignatureValidatorApproval",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {"internalType": "address", "name": "", "type": "address"},
                    {"internalType": "address", "name": "", "type": "address"}
                ],
                "name": "allowedValidators",
                "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "marketSellOrders",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    }
                ],
                "name": "getOrdersInfo",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint8", "name": "orderStatus", "type": "uint8"},
                            {"internalType": "bytes32", "name": "orderHash", "type": "bytes32"},
                            {"internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256"}
                        ],
                        "internalType": "struct LibOrder.OrderInfo[]",
                        "name": "",
                        "type": "tuple[]"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {"internalType": "bytes32", "name": "", "type": "bytes32"},
                    {"internalType": "address", "name": "", "type": "address"}
                ],
                "name": "preSigned",
                "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "owner",
                "outputs": [{"internalType": "address", "name": "", "type": "address"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {"internalType": "bytes32", "name": "hash", "type": "bytes32"},
                    {"internalType": "address", "name": "signerAddress", "type": "address"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "isValidSignature",
                "outputs": [{"internalType": "bool", "name": "isValid", "type": "bool"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256", "name": "makerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "marketBuyOrdersNoThrow",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    {"internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "fillOrder",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "fillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {"internalType": "uint256", "name": "salt", "type": "uint256"},
                    {"internalType": "address", "name": "signerAddress", "type": "address"},
                    {"internalType": "bytes", "name": "data", "type": "bytes"},
                    {"internalType": "bytes", "name": "signature", "type": "bytes"}
                ],
                "name": "executeTransaction",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [{"internalType": "address", "name": "assetProxy", "type": "address"}],
                "name": "registerAssetProxy",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    }
                ],
                "name": "getOrderInfo",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint8", "name": "orderStatus", "type": "uint8"},
                            {"internalType": "bytes32", "name": "orderHash", "type": "bytes32"},
                            {"internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256"}
                        ],
                        "internalType": "struct LibOrder.OrderInfo",
                        "name": "orderInfo",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    }
                ],
                "name": "cancelOrder",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {"internalType": "address", "name": "", "type": "address"},
                    {"internalType": "address", "name": "", "type": "address"}
                ],
                "name": "orderEpoch",
                "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "ZRX_ASSET_DATA",
                "outputs": [{"internalType": "bytes", "name": "", "type": "bytes"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "marketSellOrdersNoThrow",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "EIP712_DOMAIN_HASH",
                "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            {"internalType": "address", "name": "makerAddress", "type": "address"},
                            {"internalType": "address", "name": "takerAddress", "type": "address"},
                            {"internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                            {"internalType": "address", "name": "senderAddress", "type": "address"},
                            {"internalType": "uint256", "name": "makerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFee", "type": "uint256"},
                            {"internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256"},
                            {"internalType": "uint256", "name": "salt", "type": "uint256"},
                            {"internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                            {"internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {"internalType": "uint256", "name": "makerAssetFillAmount", "type": "uint256"},
                    {"internalType": "bytes[]", "name": "signatures", "type": "bytes[]"}
                ],
                "name": "marketBuyOrders",
                "outputs": [
                    {
                        "components": [
                            {"internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                            {"internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                            {"internalType": "uint256", "name": "takerFeePaid", "type": "uint256"}
                        ],
                        "internalType": "struct LibFillResults.FillResults",
                        "name": "totalFillResults",
                        "type": "tuple"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "currentContextAddress",
                "outputs": [{"internalType": "address", "name": "", "type": "address"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}],
                "name": "transferOwnership",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "VERSION",
                "outputs": [{"internalType": "string", "name": "", "type": "string"}],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [{"internalType": "bytes", "name": "_zrxAssetData", "type": "bytes"}],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "anonymous": false,
                "inputs": [
                    {"indexed": true, "internalType": "address", "name": "signerAddress", "type": "address"},
                    {"indexed": true, "internalType": "address", "name": "validatorAddress", "type": "address"},
                    {"indexed": false, "internalType": "bool", "name": "approved", "type": "bool"}
                ],
                "name": "SignatureValidatorApproval",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {"indexed": true, "internalType": "address", "name": "makerAddress", "type": "address"},
                    {"indexed": true, "internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                    {"indexed": false, "internalType": "address", "name": "takerAddress", "type": "address"},
                    {"indexed": false, "internalType": "address", "name": "senderAddress", "type": "address"},
                    {"indexed": false, "internalType": "uint256", "name": "makerAssetFilledAmount", "type": "uint256"},
                    {"indexed": false, "internalType": "uint256", "name": "takerAssetFilledAmount", "type": "uint256"},
                    {"indexed": false, "internalType": "uint256", "name": "makerFeePaid", "type": "uint256"},
                    {"indexed": false, "internalType": "uint256", "name": "takerFeePaid", "type": "uint256"},
                    {"indexed": true, "internalType": "bytes32", "name": "orderHash", "type": "bytes32"},
                    {"indexed": false, "internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                    {"indexed": false, "internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                ],
                "name": "Fill",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {"indexed": true, "internalType": "address", "name": "makerAddress", "type": "address"},
                    {"indexed": true, "internalType": "address", "name": "feeRecipientAddress", "type": "address"},
                    {"indexed": false, "internalType": "address", "name": "senderAddress", "type": "address"},
                    {"indexed": true, "internalType": "bytes32", "name": "orderHash", "type": "bytes32"},
                    {"indexed": false, "internalType": "bytes", "name": "makerAssetData", "type": "bytes"},
                    {"indexed": false, "internalType": "bytes", "name": "takerAssetData", "type": "bytes"}
                ],
                "name": "Cancel",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {"indexed": true, "internalType": "address", "name": "makerAddress", "type": "address"},
                    {"indexed": true, "internalType": "address", "name": "senderAddress", "type": "address"},
                    {"indexed": false, "internalType": "uint256", "name": "orderEpoch", "type": "uint256"}
                ],
                "name": "CancelUpTo",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {"indexed": false, "internalType": "bytes4", "name": "id", "type": "bytes4"},
                    {"indexed": false, "internalType": "address", "name": "assetProxy", "type": "address"}
                ],
                "name": "AssetProxyRegistered",
                "type": "event"
            }
        ],
        "devdoc": {
            "methods": {
                "batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
                    "details": "Synchronously cancels multiple orders in a single transaction.",
                    "params": {"orders": "Array of order specifications."}
                },
                "batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
                    "details": "Synchronously executes multiple calls of fillOrKill.",
                    "params": {
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been created by makers.",
                        "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
                    },
                    "return": "Amounts filled and fees paid by makers and taker.         NOTE: makerAssetFilledAmount and takerAssetFilledAmount may include amounts filled of different assets."
                },
                "batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
                    "details": "Synchronously executes multiple calls of fillOrder.",
                    "params": {
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been created by makers.",
                        "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
                    },
                    "return": "Amounts filled and fees paid by makers and taker.         NOTE: makerAssetFilledAmount and takerAssetFilledAmount may include amounts filled of different assets."
                },
                "batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
                    "details": "Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",
                    "params": {
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been created by makers.",
                        "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
                    },
                    "return": "Amounts filled and fees paid by makers and taker.         NOTE: makerAssetFilledAmount and takerAssetFilledAmount may include amounts filled of different assets."
                },
                "cancelOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
                    "details": "After calling, the order can not be filled anymore.      Throws if order is invalid or sender does not have permission to cancel.",
                    "params": {"order": "Order to cancel. Order must be OrderStatus.FILLABLE."}
                },
                "cancelOrdersUpTo(uint256)": {
                    "details": "Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch      and senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).",
                    "params": {
                        "targetOrderEpoch": "Orders created with a salt less or equal to this value will be cancelled."
                    }
                },
                "executeTransaction(uint256,address,bytes,bytes)": {
                    "details": "Executes an exchange method call in the context of signer.",
                    "params": {
                        "data": "AbiV2 encoded calldata.",
                        "salt": "Arbitrary number to ensure uniqueness of transaction hash.",
                        "signature": "Proof of signer transaction by signer.",
                        "signerAddress": "Address of transaction signer."
                    }
                },
                "fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
                    "details": "Fills the input order. Reverts if exact takerAssetFillAmount not filled.",
                    "params": {
                        "order": "Order struct containing order specifications.",
                        "signature": "Proof that order has been created by maker.",
                        "takerAssetFillAmount": "Desired amount of takerAsset to sell."
                    }
                },
                "fillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
                    "details": "Fills the input order.",
                    "params": {
                        "order": "Order struct containing order specifications.",
                        "signature": "Proof that order has been created by maker.",
                        "takerAssetFillAmount": "Desired amount of takerAsset to sell."
                    },
                    "return": "Amounts filled and fees paid by maker and taker."
                },
                "fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
                    "details": "Fills the input order.      Returns false if the transaction would otherwise revert.",
                    "params": {
                        "order": "Order struct containing order specifications.",
                        "signature": "Proof that order has been created by maker.",
                        "takerAssetFillAmount": "Desired amount of takerAsset to sell."
                    },
                    "return": "Amounts filled and fees paid by maker and taker."
                },
                "getAssetProxy(bytes4)": {
                    "details": "Gets an asset proxy.",
                    "params": {"assetProxyId": "Id of the asset proxy."},
                    "return": "The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."
                },
                "getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
                    "details": "Gets information about an order: status, hash, and amount filled.",
                    "params": {"order": "Order to gather information on."},
                    "return": "OrderInfo Information about the order and its state.         See LibOrder.OrderInfo for a complete description."
                },
                "getOrdersInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
                    "details": "Fetches information for all passed in orders.",
                    "params": {"orders": "Array of order specifications."},
                    "return": "Array of OrderInfo instances that correspond to each order."
                },
                "isValidSignature(bytes32,address,bytes)": {
                    "details": "Verifies that a hash has been signed by the given signer.",
                    "params": {
                        "hash": "Any 32 byte hash.",
                        "signature": "Proof that the hash has been signed by signer.",
                        "signerAddress": "Address that should have signed the given hash."
                    },
                    "return": "True if the address recovered from the provided signature matches the input signer address."
                },
                "marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
                    "details": "Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.",
                    "params": {
                        "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been signed by makers."
                    },
                    "return": "Amounts filled and fees paid by makers and taker."
                },
                "marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
                    "details": "Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.",
                    "params": {
                        "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been signed by makers."
                    },
                    "return": "Amounts filled and fees paid by makers and taker."
                },
                "marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
                    "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.",
                    "params": {
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been created by makers.",
                        "takerAssetFillAmount": "Desired amount of takerAsset to sell."
                    },
                    "return": "Amounts filled and fees paid by makers and taker."
                },
                "marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
                    "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.",
                    "params": {
                        "orders": "Array of order specifications.",
                        "signatures": "Proofs that orders have been signed by makers.",
                        "takerAssetFillAmount": "Desired amount of takerAsset to sell."
                    },
                    "return": "Amounts filled and fees paid by makers and taker."
                },
                "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)": {
                    "details": "Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).",
                    "params": {
                        "leftOrder": "First order to match.",
                        "leftSignature": "Proof that order was created by the left maker.",
                        "rightOrder": "Second order to match.",
                        "rightSignature": "Proof that order was created by the right maker."
                    },
                    "return": "matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."
                },
                "preSign(bytes32,address,bytes)": {
                    "details": "Approves a hash on-chain using any valid signature type.      After presigning a hash, the preSign signature type will become valid for that hash and signer.",
                    "params": {
                        "signature": "Proof that the hash has been signed by signer.",
                        "signerAddress": "Address that should have signed the given hash."
                    }
                },
                "registerAssetProxy(address)": {
                    "details": "Registers an asset proxy to its asset proxy id.      Once an asset proxy is registered, it cannot be unregistered.",
                    "params": {"assetProxy": "Address of new asset proxy to register."}
                },
                "setSignatureValidatorApproval(address,bool)": {
                    "details": "Approves/unnapproves a Validator contract to verify signatures on signer's behalf.",
                    "params": {
                        "approval": "Approval or disapproval of  Validator contract.",
                        "validatorAddress": "Address of Validator contract."
                    }
                }
            }
        },
        "evm": {
            "bytecode": {
                "object": "0x60806040526000805460ff191690553480156200001b57600080fd5b506040516200542d3803806200542d8339810160408190526200003e916200020f565b80518190620000559060019060208401906200016a565b50506040516020016200006890620002ed565b60408051601f1981840301815282825280516020918201208383018352600b84527f30782050726f746f636f6c0000000000000000000000000000000000000000009382019390935281518083018352600181527f32000000000000000000000000000000000000000000000000000000000000009082015290516200013692917ff0f24618f4c4be1e62e026fb039a20ef96f4495294817d1027ffaa6d1f70e61e917fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a591309101620002d2565b60408051601f19818403018152919052805160209091012060025550600380546001600160a01b03191633179055620003ae565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001ad57805160ff1916838001178555620001dd565b82800160010185558215620001dd579182015b82811115620001dd578251825591602001919060010190620001c0565b50620001eb929150620001ef565b5090565b6200020c91905b80821115620001eb5760008155600101620001f6565b90565b6000602080838503121562000222578182fd5b82516001600160401b038082111562000239578384fd5b81850186601f8201126200024b578485fd5b80519250818311156200025c578485fd5b604051601f8401601f19168101850183811182821017156200027c578687fd5b604052838152818401850188101562000293578586fd5b8592505b83831015620002b6578183018501518184018601529184019162000297565b83831115620002c757858585830101525b979650505050505050565b93845260208401929092526040830152606082015260800190565b7f454950373132446f6d61696e280000000000000000000000000000000000000081527f737472696e67206e616d652c0000000000000000000000000000000000000000600d8201527f737472696e672076657273696f6e2c000000000000000000000000000000000060198201527f6164647265737320766572696679696e67436f6e74726163740000000000000060288201527f2900000000000000000000000000000000000000000000000000000000000000604182015260420190565b61506f80620003be6000396000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80637e9d74dc11610145578063d46b02c3116100bd578063e306f7791161008c578063eea086ba11610071578063eea086ba146104f8578063f2fde38b14610500578063ffa1ad741461051357610241565b8063e306f779146104dd578063e5fa431b146104e557610241565b8063d46b02c31461048f578063d9bfa73e146104a2578063db123b1a146104b5578063dd1c7d18146104ca57610241565b8063a3e2038011610114578063bfc8bfce116100f9578063bfc8bfce14610449578063c585bb931461045c578063c75e0a811461046f57610241565b8063a3e2038014610423578063b4be83d51461043657610241565b80637e9d74dc146103d557806382c174d0146103f55780638da5cb5b14610408578063936347021461041057610241565b80634d0ae546116101d8578063642f2eaf116101a757806377fcce681161018c57806377fcce681461039c5780637b8e3514146103af5780637e1d9808146103c257610241565b8063642f2eaf1461037657806364a3bc151461038957610241565b80634d0ae5461461032a5780634f9559b11461033d57806350dde19014610350578063607041081461036357610241565b80633c28d861116102145780633c28d861146102c45780633e228bae146102e45780633fd3c997146102f75780634ac147821461031757610241565b8063288cdc9114610246578063297bb70b1461026f5780632ac126221461028f5780633683ef8e146102af575b600080fd5b610259610254366004613f24565b61051b565b6040516102669190614316565b60405180910390f35b61028261027d366004613df5565b61052d565b6040516102669190614f14565b6102a261029d366004613f24565b610643565b604051610266919061472b565b6102c26102bd366004613f62565b610658565b005b6102d76102d236600461407b565b610749565b6040516102669190614f22565b6102826102f2366004614124565b6108e1565b61030a61030536600461400c565b610937565b60405161026691906145fd565b6102c2610325366004613dc0565b61095f565b610282610338366004613df5565b610a23565b6102c261034b366004613f24565b610aff565b61028261035e366004613df5565b610cac565b61030a61037136600461400c565b610d21565b6102a2610384366004613f24565b610d6f565b610282610397366004614124565b610d84565b6102c26103aa366004613d83565b610e2f565b6102a26103bd366004613d4e565b610f68565b6102826103d0366004613ed1565b610f88565b6103e86103e3366004613dc0565b6110d9565b60405161026691906146dd565b6102a2610403366004613f3d565b61116d565b61030a61118d565b6102a261041e366004613fbd565b6111a9565b610282610431366004613ed1565b6115ae565b610282610444366004614124565b6116ad565b6102c2610457366004614184565b611728565b6102c261046a366004613d32565b6119f7565b61048261047d366004614046565b611bf9565b6040516102669190614f5a565b6102c261049d366004614046565b611cef565b6102596104b0366004613d4e565b611d8b565b6104bd611da8565b60405161026691906147d5565b6102826104d8366004613ed1565b611e53565b610259611f0c565b6102826104f3366004613ed1565b611f12565b61030a612043565b6102c261050e366004613d32565b61205f565b6104bd612110565b60046020526000908152604090205481565b610535613a05565b60005460ff161561057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781558451905b818114610612576105b9613a05565b6105fd8783815181106105c857fe5b60200260200101518784815181106105dc57fe5b60200260200101518785815181106105f057fe5b6020026020010151612149565b905061060984826121e8565b506001016105aa565b5050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559392505050565b60056020526000908152604090205460ff1681565b73ffffffffffffffffffffffffffffffffffffffff831633146106ec576106b6848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111a992505050565b6106ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614a0e565b5050600091825260076020908152604080842073ffffffffffffffffffffffffffffffffffffffff9093168452919052902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b610751613a2d565b60005460ff161561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556101608086015161014080870191909152860151908501526107d9613a5a565b6107e286611bf9565b90506107ec613a5a565b6107f586611bf9565b9050600061080161224a565b905061080f8884838961227c565b61081b8783838861227c565b610825888861240e565b61083988888560400151856040015161246e565b805160208101519051919550610854918a91869181906125f7565b60208085015190810151905161087091899185919081906125f7565b610889888285602001518660400151886000015161270e565b6108a2878284602001518560400151886020015161270e565b6108ae888883876127d0565b505050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055949350505050565b6108e9613a05565b60606108f68585856129a8565b9050608081825160208401305af4801561092d57815183526020820151602084015260408201516040840152606082015160608401525b50505b9392505050565b600b6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60005460ff161561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781558151905b8181146109f6576109ee8382815181106109e157fe5b6020026020010151612b7d565b6001016109cb565b5050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905550565b610a2b613a05565b60005460ff1615610a68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781558451905b81811461061257610aa6613a05565b610aea878381518110610ab557fe5b6020026020010151878481518110610ac957fe5b6020026020010151878581518110610add57fe5b6020026020010151612ba8565b9050610af684826121e8565b50600101610a97565b60005460ff1615610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178155610b6f61224a565b9050600073ffffffffffffffffffffffffffffffffffffffff82163314610b965733610b99565b60005b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600660209081526040808320938516835292905220549091506001840190808211610c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614c5a565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526006602090815260408083209488168084529490915290819020859055517f82af639571738f4ebd4268fb0363d8957ebe1bbb9e78dba5ebd69eed39b154f090610c75908690614316565b60405180910390a35050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055505050565b610cb4613a05565b835160005b81811461092d57610cc8613a05565b610d0c878381518110610cd757fe5b6020026020010151878481518110610ceb57fe5b6020026020010151878581518110610cff57fe5b60200260200101516108e1565b9050610d1884826121e8565b50600101610cb9565b7fffffffff0000000000000000000000000000000000000000000000000000000081166000908152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff165b919050565b60096020526000908152604090205460ff1681565b610d8c613a05565b60005460ff1615610dc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610dff848484612ba8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055949350505050565b60005460ff1615610e6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178155610e9f61224a565b73ffffffffffffffffffffffffffffffffffffffff8181166000818152600860209081526040808320948916808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168715151790555192935090917fa8656e308026eeabce8f0bc18048433252318ab80ac79da0b3d3d8697dfba89190610f3390869061472b565b60405180910390a35050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905550565b600860209081526000928352604080842090915290825290205460ff1681565b610f90613a05565b60005460ff1615610fcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011781558451606091869161100557fe5b60209081029190910101516101600151855190915060005b8181146110a7578287828151811061103157fe5b602002602001015161016001819052506000611051878660200151612bfa565b905061105b613a05565b61107f89848151811061106a57fe5b6020026020010151838986815181106105f057fe5b905061108b86826121e8565b8786602001511061109d5750506110a7565b505060010161101d565b505050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690559392505050565b606060008251905060608160405190808252806020026020018201604052801561111d57816020015b61110a613a5a565b8152602001906001900390816111025790505b50905060005b8281146111655761114685828151811061113957fe5b6020026020010151611bf9565b82828151811061115257fe5b6020908102919091010152600101611123565b509392505050565b600760209081526000928352604080842090915290825290205460ff1681565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6000808251116111e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614c23565b60006111f083612c41565b60f81c90506007811061122f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148c4565b60008160ff16600781111561124057fe5b9050600081600781111561125057fe5b1415611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614bec565b600181600781111561129657fe5b14156112e1578351156112d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614edd565b50600091506109309050565b60028160078111156112ef57fe5b141561139d578351604014611330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614aea565b84866040516020016113429190614316565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261137a91614332565b60405181039061138b908790614332565b604051809103902c9250610930915050565b60038160078111156113ab57fe5b14156114855783516040146113ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614aea565b6000866040516020016113ff919061434e565b60405160208183030381529060405280519060200120905085816040516020016114299190614316565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261146191614332565b604051810390611472908890614332565b604051809103902c935061093092505050565b600481600781111561149357fe5b14156114ae576114a4868686612cdf565b9250610930915050565b60058160078111156114bc57fe5b141561152d5760006114cd85612e34565b73ffffffffffffffffffffffffffffffffffffffff80881660009081526008602090815260408083209385168352929052205490915060ff166115165760009350505050610930565b61152281888888612eab565b935061093092505050565b600681600781111561153b57fe5b141561157c57505050600083815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16610930565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148c4565b6115b6613a05565b6060846000815181106115c557fe5b60209081029190910101516101400151855190915060005b8181146116a357828782815181106115f157fe5b602002602001015161014001819052506000611611878660000151612bfa565b9050600061164e89848151811061162457fe5b602002602001015160a001518a858151811061163c57fe5b60200260200101516080015184613007565b9050611658613a05565b61167c8a858151811061166757fe5b6020026020010151838a8781518110610cff57fe5b905061168887826121e8565b86518911611698575050506116a3565b5050506001016115dd565b5050509392505050565b6116b5613a05565b60005460ff16156116f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610dff848484612149565b600a5473ffffffffffffffffffffffffffffffffffffffff1615611778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b60006117c36117be888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061305d92505050565b6130e5565b60008181526009602052604090205490915060ff161561180f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906149d7565b73ffffffffffffffffffffffffffffffffffffffff861633146118e45761186d818785858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111a992505050565b6118a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614ea6565b600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790555b60008181526009602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905551309061192c908890889061431f565b600060405180830381855af49150503d8060008114611967576040519150601f19603f3d011682016040523d82523d6000602084013e61196c565b606091505b50509050806119a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614a7c565b73ffffffffffffffffffffffffffffffffffffffff871633146119ed57600a80547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b5050505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314611a48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d6d565b60008173ffffffffffffffffffffffffffffffffffffffff1663ae25532e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a9057600080fd5b505afa158015611aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ac89190810190614029565b7fffffffff0000000000000000000000000000000000000000000000000000000081166000908152600b602052604090205490915073ffffffffffffffffffffffffffffffffffffffff168015611b4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105729061488d565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b60205260409081902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616179055517fd2c6b762299c609bdb96520b58a49bfb80186934d4f71a86a367571a15c0319490611bec908490869061478d565b60405180910390a1505050565b611c01613a5a565b611c0a82613122565b602080830182905260009182526004905260409081902054908201526080820151611c3c5760015b60ff168152610d6a565b60a0820151611c4c576002611c32565b8160a00151816040015110611c62576005611c32565b8161010001514210611c75576004611c32565b60208082015160009081526005909152604090205460ff1615611c99576006611c32565b610120820151825173ffffffffffffffffffffffffffffffffffffffff90811660009081526006602090815260408083206060880151909416835292905220541115611ce6576006611c32565b60038152919050565b60005460ff1615611d2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611d6081612b7d565b50600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600660209081526000928352604080842090915290825290205481565b60018054604080516020600284861615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f81018490048402820184019092528181529291830182828015611e4b5780601f10611e2057610100808354040283529160200191611e4b565b820191906000526020600020905b815481529060010190602001808311611e2e57829003601f168201915b505050505081565b611e5b613a05565b606084600081518110611e6a57fe5b60209081029190910101516101600151855190915060005b8181146116a35782878281518110611e9657fe5b602002602001015161016001819052506000611eb6878660200151612bfa565b9050611ec0613a05565b611ee4898481518110611ecf57fe5b602002602001015183898681518110610cff57fe5b9050611ef086826121e8565b87866020015110611f025750506116a3565b5050600101611e82565b60025481565b611f1a613a05565b60005460ff1615611f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d36565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117815584516060918691611f8f57fe5b60209081029190910101516101400151855190915060005b8181146110a75782878281518110611fbb57fe5b602002602001015161014001819052506000611fdb878660000151612bfa565b90506000611fee89848151811061162457fe5b9050611ff8613a05565b61201c8a858151811061200757fe5b6020026020010151838a87815181106105f057fe5b905061202887826121e8565b86518911612038575050506110a7565b505050600101611fa7565b600a5473ffffffffffffffffffffffffffffffffffffffff1681565b60035473ffffffffffffffffffffffffffffffffffffffff1633146120b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614d6d565b73ffffffffffffffffffffffffffffffffffffffff81161561210d57600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b50565b6040518060400160405280600581526020017f332e302e3000000000000000000000000000000000000000000000000000000081525081565b612151613a05565b612159613a5a565b61216285611bf9565b9050600061216e61224a565b905061217c8683838761227c565b60006121908760a001518460400151612bfa565b9050600061219e8783613130565b90506121b18885898489600001516125f7565b6121bb8882613146565b94506121d28884866020015187604001518961270e565b6121dd8884876131a7565b505050509392505050565b815181516121f691906132b5565b82526020808301519082015161220c91906132b5565b60208301526040808301519082015161222591906132b5565b60408301526060808301519082015161223e91906132b5565b60609092019190915250565b600a5460009073ffffffffffffffffffffffffffffffffffffffff168181156122735781612275565b335b9250505090565b825160ff166003146122ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614e01565b606084015173ffffffffffffffffffffffffffffffffffffffff161561232d57606084015173ffffffffffffffffffffffffffffffffffffffff16331461232d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614e38565b602084015173ffffffffffffffffffffffffffffffffffffffff16156123b6578173ffffffffffffffffffffffffffffffffffffffff16846020015173ffffffffffffffffffffffffffffffffffffffff16146123b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906147e8565b6040830151612408576123d283602001518560000151836111a9565b612408576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614932565b50505050565b6124208260a001518260a001516132f4565b612432836080015183608001516132f4565b101561246a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614e6f565b5050565b612476613a2d565b60006124868660a0015185612bfa565b9050600061249d87608001518860a0015184613348565b905060006124af8760a0015186612bfa565b905060006124c688608001518960a0015184613348565b90508084106125095760208086018051839052805182018490525151865182015260808a015160a08b01518751909201516125019290613348565b855152612546565b845183905284516020908101859052855181015190860180519190915260a089015160808a015191515161253d92906133c5565b60208087015101525b845151602080870151015161255b9190612bfa565b604086015284515160808a015160c08b0151612578929190613348565b85516040015284516020015160a08a015160e08b0151612599929190613348565b855160600152602085015151608089015160c08a01516125ba929190613348565b856020015160400181815250506125e28560200151602001518960a001518a60e00151613348565b60208601516060015250505050949350505050565b8261262e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614b21565b82821115612668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614ab3565b8460a0015161267b8560400151846132b5565b11156126b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105729061481f565b6126c18560800151836132f4565b6126cf828760a001516132f4565b1115612707576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614cff565b5050505050565b61271c8282602001516132b5565b600460008581526020019081526020016000208190555082856040015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff167f0bcc4c97732e47d9946f229edb95f5b6323f601300e4690de719993f3c371129873386600001518760200151886040015189606001518e61014001518f61016001516040516127c1989796959493929190614669565b60405180910390a45050505050565b60018054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156128795780601f1061284e57610100808354040283529160200191612879565b820191906000526020600020905b81548152906001019060200180831161285c57829003601f168201915b505050505090506128a185610140015186600001518660000151856020015160200151613462565b610140840151845186518451602001516128bd93929190613462565b6128d68561014001518660000151858560400151613462565b6128f28186600001518760400151856000015160400151613462565b61290e8185600001518660400151856020015160400151613462565b836040015173ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff161415612978576129738184876040015161296e8660000151606001518760200151606001516132b5565b613462565b612707565b61299081848760400151856000015160600151613462565b61270781848660400151856020015160600151613462565b604080517fb4be83d5000000000000000000000000000000000000000000000000000000006020808301919091526060602483018181528751608485019081528884015160a48601529488015160c48501529087015160e4840152608087015161010484015260a087015161012484015260c087015161014484015260e08701516101648401526101008701516101848401526101208701516101a4840152610140870180516101c485019081526101608901516101e486015261018090525180516102048501819052939461022486019492936044870193919281019190601f82010460005b81811015612aad578351885260209788019790930192600101612a8f565b5050505080840361016091820152870151805180855260209485019460009281019190601f8201045b80841015612af95782518752602087019650602083019250600184019350612ad6565b505050868252918303602091820190815285518085529382019360009391928781019190601f8201045b80861015612b465782518752602087019650602083019250600186019550612b23565b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08585030185525050506040529392505050565b612b85613a5a565b612b8e82611bf9565b9050612b9a8282613607565b61246a828260200151613732565b612bb0613a05565b612bbb848484612149565b905082816020015114610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614cc8565b600082821115612c36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614856565b508082035b92915050565b600080825111612c7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614b8f565b81600183510381518110612c8d57fe5b016020015182517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909252507fff000000000000000000000000000000000000000000000000000000000000001690565b6040516000906060907f1626ba7e0000000000000000000000000000000000000000000000000000000090612d1a9087908690602401614774565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093178352815191935090829081885afa808015612db75760018114612e28576121dd565b7f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c0c57414c4c45545f4552524f5200000000000000000000000000000000604052600060605260646000fd5b50505195945050505050565b6000601482511015612e72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614da4565b612e808260148451036137d9565b82517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec019092525090565b6040516000906060907f936347020000000000000000000000000000000000000000000000000000000090612ee890879087908790602401614736565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931783528151919350908290818a5afa808015612f855760018114612ff657612ffb565b7f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c0f56414c494441544f525f4552524f5200000000000000000000000000604052600060605260646000fd5b825194505b50505050949350505050565b6000808311613042576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148fb565b61305561304f85846132f4565b84613838565b949350505050565b60008060405160200161306f9061437f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012086518783012090845290830188905273ffffffffffffffffffffffffffffffffffffffff8716918301919091526060820152608090209150509392505050565b600280546040517f190100000000000000000000000000000000000000000000000000000000000081529182015260228101919091526042902090565b6000612c3b6117be8361384d565b600081831061313f5781610930565b5090919050565b61314e613a05565b6020810182905260a0830151608084015161316a918491613348565b808252608084015160c0850151613182929190613348565b604082015260a083015160e084015161319c918491613348565b606082015292915050565b60018054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156132505780601f1061322557610100808354040283529160200191613250565b820191906000526020600020905b81548152906001019060200180831161323357829003601f168201915b505050505090506132708461014001518560000151858560000151613462565b6132898461016001518486600001518560200151613462565b6132a181856000015186604001518560400151613462565b612408818486604001518560600151613462565b600082820183811015610930576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906149a0565b60008261330357506000612c3b565b8282028284828161331057fe5b0414610930576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906149a0565b6000808311613383576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148fb565b61338e848484613901565b15613042576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614a45565b6000808311613400576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148fb565b61340b848484613984565b15613442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614a45565b61305561304f61345286856132f4565b61345d866001612bfa565b6132b5565b60008111801561349e57508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156124085760038451116134de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614c91565b6020848101517fffffffff00000000000000000000000000000000000000000000000000000000166000818152600b90925260409091205473ffffffffffffffffffffffffffffffffffffffff1680613563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614b58565b60405186517fa85e59e40000000000000000000000000000000000000000000000000000000082526080600483015273ffffffffffffffffffffffffffffffffffffffff87811660248401528616604483015260648201859052608480830191603f01660fffffffffffe0168301015b808210156135ee5788518252602098890198909101906135d3565b61020083848303856000885af1915050806119ed573d82fd5b805160ff16600314613645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614e01565b606082015173ffffffffffffffffffffffffffffffffffffffff16156136b857606082015173ffffffffffffffffffffffffffffffffffffffff1633146136b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614e38565b60006136c261224a565b90508073ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff161461372d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614969565b505050565b6000818152600560205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558281015183516101408501516101608601519351859473ffffffffffffffffffffffffffffffffffffffff9485169493909316927fdc47b3613d9fe400085f6dbdc99453462279057e6207385042827ed6b1a62cf7926137cd9233929061461e565b60405180910390a45050565b60008160140183511015613819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290614da4565b50016014015173ffffffffffffffffffffffffffffffffffffffff1690565b60008082848161384457fe5b04949350505050565b60008060405160200161385f90614440565b604051602081830303815290604052805190602001209050600083610140015160405161388c9190614332565b6040518091039020905060008461016001516040516138ab9190614332565b6040519081900390207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0860180516101408801805161016090990180519784529581529285526101a08220915295905250525090565b600080831161393c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148fb565b811580613947575083155b1561395457506000610930565b6000838061395e57fe5b858409905061396d85846132f4565b6139796103e8836132f4565b101595945050505050565b60008083116139bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906148fb565b8115806139ca575083155b156139d757506000610930565b600083806139e157fe5b8584099050836139f18583612bfa565b816139f857fe5b06905061396d85846132f4565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060600160405280613a40613a05565b8152602001613a4d613a05565b8152602001600081525090565b604080516060810182526000808252602082018190529181019190915290565b803573ffffffffffffffffffffffffffffffffffffffff81168114612c3b57600080fd5b600082601f830112613aae578081fd5b8135613ac1613abc82614f8f565b614f68565b8181529150602080830190840160005b83811015613afe57613ae98760208435890101613bac565b83526020928301929190910190600101613ad1565b5050505092915050565b600082601f830112613b18578081fd5b8135613b26613abc82614f8f565b8181529150602080830190840160005b83811015613afe57613b4e8760208435890101613c33565b83526020928301929190910190600101613b36565b60008083601f840112613b7557600080fd5b50813567ffffffffffffffff811115613b8d57600080fd5b602083019150836020828501011115613ba557600080fd5b9250929050565b600082601f830112613bbc578081fd5b813567ffffffffffffffff811115613bd2578182fd5b613c0360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601614f68565b9150808252836020828501011115613c1a57600080fd5b8060208401602084013760009082016020015292915050565b6000610180808385031215613c46578182fd5b613c4f81614f68565b915050613c5c8383613a7a565b8152613c6b8360208401613a7a565b6020820152613c7d8360408401613a7a565b6040820152613c8f8360608401613a7a565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013567ffffffffffffffff80821115613cf157600080fd5b613cfd86838701613bac565b83850152610160925082850135915080821115613d1957600080fd5b50613d2685828601613bac565b82840152505092915050565b600060208284031215613d4457600080fd5b6109308383613a7a565b60008060408385031215613d6157600080fd5b613d6b8484613a7a565b9150613d7a8460208501613a7a565b90509250929050565b60008060408385031215613d9657600080fd5b613da08484613a7a565b915060208301358015158114613db557600080fd5b809150509250929050565b600060208284031215613dd257600080fd5b813567ffffffffffffffff811115613de957600080fd5b61305584828501613b08565b600080600060608486031215613e09578081fd5b833567ffffffffffffffff80821115613e20578283fd5b613e2c87838801613b08565b9450602091508186013581811115613e42578384fd5b80870188601f820112613e53578485fd5b80359150613e63613abc83614f8f565b82815284810190828601868502840187018c1015613e7f578788fd5b8793505b84841015613ea1578035835260019390930192918601918601613e83565b5096505050506040860135915080821115613eba578283fd5b50613ec786828701613a9e565b9150509250925092565b600080600060608486031215613ee5578081fd5b833567ffffffffffffffff80821115613efc578283fd5b613f0887838801613b08565b9450602086013593506040860135915080821115613eba578283fd5b600060208284031215613f3657600080fd5b5035919050565b60008060408385031215613f5057600080fd5b823591506020830135613db581614fdc565b60008060008060608587031215613f7857600080fd5b84359350613f898660208701613a7a565b9250604085013567ffffffffffffffff811115613fa557600080fd5b613fb187828801613b63565b95989497509550505050565b600080600060608486031215613fd257600080fd5b833592506020840135613fe481614fdc565b9150604084013567ffffffffffffffff81111561400057600080fd5b613ec786828701613bac565b60006020828403121561401e57600080fd5b813561093081614ffe565b60006020828403121561403b57600080fd5b815161093081614ffe565b60006020828403121561405857600080fd5b813567ffffffffffffffff81111561406f57600080fd5b61305584828501613c33565b60008060008060808587031215614090578182fd5b843567ffffffffffffffff808211156140a7578384fd5b6140b388838901613c33565b955060208701359150808211156140c8578384fd5b6140d488838901613c33565b945060408701359150808211156140e9578384fd5b6140f588838901613bac565b9350606087013591508082111561410b57600080fd5b5061411887828801613bac565b91505092959194509250565b600080600060608486031215614138578081fd5b833567ffffffffffffffff8082111561414f578283fd5b61415b87838801613c33565b9450602086013593506040860135915080821115614177578283fd5b50613ec786828701613bac565b6000806000806000806080878903121561419d57600080fd5b863595506141ae8860208901613a7a565b9450604087013567ffffffffffffffff808211156141cb57600080fd5b6141d78a838b01613b63565b909650945060608901359150808211156141f057600080fd5b506141fd89828a01613b63565b979a9699509497509295939492505050565b60008151808452614227816020860160208601614fb0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f6279746573206d616b65724173736574446174612c0000000000000000000000815260150190565b7f62797465732074616b6572417373657444617461000000000000000000000000815260140190565b7f2900000000000000000000000000000000000000000000000000000000000000815260010190565b805182526020810151602083015260408101516040830152606081015160608301525050565b805160ff16825260208082015190830152604090810151910152565b90815260200190565b6000828483375060009101908152919050565b60008251614344818460208701614fb0565b9190910192915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b7f5a65726f45785472616e73616374696f6e28000000000000000000000000000081527f75696e743235362073616c742c0000000000000000000000000000000000000060128201527f61646472657373207369676e6572416464726573732c00000000000000000000601f8201527f627974657320646174610000000000000000000000000000000000000000000060358201527f2900000000000000000000000000000000000000000000000000000000000000603f82015260400190565b60007f4f7264657228000000000000000000000000000000000000000000000000000082527f61646472657373206d616b6572416464726573732c000000000000000000000060068301527f616464726573732074616b6572416464726573732c0000000000000000000000601b8301527f6164647265737320666565526563697069656e74416464726573732c0000000060308301527f616464726573732073656e646572416464726573732c00000000000000000000604c8301527f75696e74323536206d616b65724173736574416d6f756e742c0000000000000060628301527f75696e743235362074616b65724173736574416d6f756e742c00000000000000607b8301527f75696e74323536206d616b65724665652c00000000000000000000000000000060948301527f75696e743235362074616b65724665652c00000000000000000000000000000060a58301527f75696e743235362065787069726174696f6e54696d655365636f6e64732c000060b68301527f75696e743235362073616c742c0000000000000000000000000000000000000060d4830152612c3b6145f86145f360e18501614259565b614282565b6142ab565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff851682526060602083015261464d606083018561420f565b828103604084015261465f818561420f565b9695505050505050565b600061010073ffffffffffffffffffffffffffffffffffffffff808c168452808b166020850152508860408401528760608401528660808401528560a08401528060c08401526146bb8184018661420f565b83810360e08501526146cd818661420f565b9c9b505050505050505050505050565b602080825282518282018190526000918401906040840190835b818110156147205761470a8385516142fa565b60209390930192606092909201916001016146f7565b509095945050505050565b901515815260200190565b600084825273ffffffffffffffffffffffffffffffffffffffff841660208301526060604083015261476b606083018461420f565b95945050505050565b600083825260406020830152613055604083018461420f565b7fffffffff0000000000000000000000000000000000000000000000000000000092909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b600060208252610930602083018461420f565b6020808252600d908201527f494e56414c49445f54414b455200000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4f524445525f4f56455246494c4c000000000000000000000000000000000000604082015260600190565b60208082526011908201527f55494e543235365f554e444552464c4f57000000000000000000000000000000604082015260600190565b6020808252601a908201527f41535345545f50524f58595f414c52454144595f455849535453000000000000604082015260600190565b60208082526015908201527f5349474e41545552455f554e535550504f525445440000000000000000000000604082015260600190565b60208082526010908201527f4449564953494f4e5f42595f5a45524f00000000000000000000000000000000604082015260600190565b60208082526017908201527f494e56414c49445f4f524445525f5349474e4154555245000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4d414b455200000000000000000000000000000000000000604082015260600190565b60208082526010908201527f55494e543235365f4f564552464c4f5700000000000000000000000000000000604082015260600190565b6020808252600f908201527f494e56414c49445f54585f484153480000000000000000000000000000000000604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b6020808252600e908201527f524f554e44494e475f4552524f52000000000000000000000000000000000000604082015260600190565b60208082526010908201527f4641494c45445f455845435554494f4e00000000000000000000000000000000604082015260600190565b6020808252600d908201527f54414b45525f4f56455250415900000000000000000000000000000000000000604082015260600190565b60208082526012908201527f4c454e4754485f36345f52455155495245440000000000000000000000000000604082015260600190565b60208082526014908201527f494e56414c49445f54414b45525f414d4f554e54000000000000000000000000604082015260600190565b6020808252601a908201527f41535345545f50524f58595f444f45535f4e4f545f4558495354000000000000604082015260600190565b60208082526021908201527f475245415445525f5448414e5f5a45524f5f4c454e4754485f5245515549524560408201527f4400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f5349474e41545552455f494c4c4547414c000000000000000000000000000000604082015260600190565b6020808252601e908201527f4c454e4754485f475245415445525f5448414e5f305f52455155495245440000604082015260600190565b60208082526017908201527f494e56414c49445f4e45575f4f524445525f45504f4348000000000000000000604082015260600190565b6020808252601e908201527f4c454e4754485f475245415445525f5448414e5f335f52455155495245440000604082015260600190565b60208082526014908201527f434f4d504c4554455f46494c4c5f4641494c4544000000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f46494c4c5f50524943450000000000000000000000000000604082015260600190565b60208082526012908201527f5245454e5452414e43595f494c4c4547414c0000000000000000000000000000604082015260600190565b60208082526013908201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604082015260600190565b60208082526026908201527f475245415445525f4f525f455155414c5f544f5f32305f4c454e4754485f524560408201527f5155495245440000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f4f524445525f554e46494c4c41424c4500000000000000000000000000000000604082015260600190565b6020808252600e908201527f494e56414c49445f53454e444552000000000000000000000000000000000000604082015260600190565b60208082526018908201527f4e454741544956455f5350524541445f52455155495245440000000000000000604082015260600190565b60208082526014908201527f494e56414c49445f54585f5349474e4154555245000000000000000000000000604082015260600190565b60208082526011908201527f4c454e4754485f305f5245515549524544000000000000000000000000000000604082015260600190565b60808101612c3b82846142d4565b600061012082019050614f368284516142d4565b6020830151614f4860808401826142d4565b50604083015161010083015292915050565b60608101612c3b82846142fa565b60405181810167ffffffffffffffff81118282101715614f8757600080fd5b604052919050565b600067ffffffffffffffff821115614fa657600080fd5b5060209081020190565b60005b83811015614fcb578181015183820152602001614fb3565b838111156124085750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461210d57600080fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461210d57600080fdfea365627a7a72315820822c47f17fd129690edc07e525f31ecd56af3dbdea9526600a227913f39fe2146c6578706572696d656e74616cf564736f6c634300050b0040"
            }
        }
    },
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.11.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {"yul": true, "deduplicate": true, "cse": true, "constantOptimizer": true}
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "constantinople",
            "remappings": [
                "@0x/contracts-erc20=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/extensions/node_modules/@0x/contracts-erc20",
                "@0x/contracts-exchange=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/extensions/node_modules/@0x/contracts-exchange",
                "@0x/contracts-exchange-libs=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/extensions/node_modules/@0x/contracts-exchange-libs",
                "@0x/contracts-utils=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/extensions/node_modules/@0x/contracts-utils",
                "@0x/contracts-erc721=/home/toffick/PixelPlex/Projects/0x/0x-monorepo/contracts/extensions/node_modules/@0x/contracts-erc721"
            ]
        }
    },
    "networks": {}
}
